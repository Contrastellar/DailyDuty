{
  "Configuration_Label": {
    "message": "Configuration",
    "description": "Configuration.get_Label"
  },
  "Configuration_ModuleNotSelected": {
    "message": "Select an item to configure in the left pane",
    "description": "Configuration.get_ModuleNotSelected"
  },
  "Configuration_Options": {
    "message": "Options",
    "description": "Configuration.get_Options"
  },
  "Configuration_MarkCompleteWhen": {
    "message": "Mark Complete When",
    "description": "Configuration.get_MarkCompleteWhen"
  },
  "Configuration_NotificationOptions": {
    "message": "Notification Options",
    "description": "Configuration.get_NotificationOptions"
  },
  "Configuration_OnLogin": {
    "message": "Send Notification on Login",
    "description": "Configuration.get_OnLogin"
  },
  "Configuration_OnZoneChange": {
    "message": "Send Notification on Zone Change",
    "description": "Configuration.get_OnZoneChange"
  },
  "Configuration_HideDisabled": {
    "message": "Hide Disabled",
    "description": "Configuration.get_HideDisabled"
  },
  "Configuration_ShowDisabled": {
    "message": "Show Disabled",
    "description": "Configuration.get_ShowDisabled"
  },
  "Status_Label": {
    "message": "Status",
    "description": "Status.get_Label"
  },
  "Status_ModuleStatus": {
    "message": "Module Status",
    "description": "Status.get_ModuleStatus"
  },
  "Command": {
    "message": "Command",
    "description": "Common.get_Command"
  },
  "Enabled": {
    "message": "Enabled",
    "description": "Common.get_Enabled"
  },
  "Disabled": {
    "message": "Disabled",
    "description": "Common.get_Disabled"
  },
  "Unknown": {
    "message": "Unknown",
    "description": "Common.get_Unknown"
  },
  "Incomplete": {
    "message": "Incomplete",
    "description": "Common.get_Incomplete"
  },
  "Unavailable": {
    "message": "Unavailable",
    "description": "Common.get_Unavailable"
  },
  "Complete": {
    "message": "Complete",
    "description": "Common.get_Complete"
  },
  "Overriden": {
    "message": "Overriden",
    "description": "Common.get_Overriden"
  },
  "LessThanLabel": {
    "message": "Inférieur à",
    "description": "Common.get_LessThanLabel"
  },
  "LessThanOrEqualLabel": {
    "message": "Inférieur ou égal à",
    "description": "Common.get_LessThanOrEqualLabel"
  },
  "EqualToLabel": {
    "message": "Égal à",
    "description": "Common.get_EqualToLabel"
  },
  "Allowances": {
    "message": "Allowances",
    "description": "Common.get_Allowances"
  },
  "Target": {
    "message": "Target",
    "description": "Common.get_Target"
  },
  "Mode": {
    "message": "Mode",
    "description": "Common.get_Mode"
  },
  "TopLeft": {
    "message": "Top Left",
    "description": "Common.get_TopLeft"
  },
  "TopRight": {
    "message": "Top Right",
    "description": "Common.get_TopRight"
  },
  "BottomLeft": {
    "message": "Bottom Left",
    "description": "Common.get_BottomLeft"
  },
  "BottomRight": {
    "message": "Bottom Right",
    "description": "Common.get_BottomRight"
  },
  "Header": {
    "message": "Header",
    "description": "Common.get_Header"
  },
  "Daily": {
    "message": "Daily",
    "description": "Common.get_Daily"
  },
  "Weekly": {
    "message": "Weekly",
    "description": "Common.get_Weekly"
  },
  "Expansion_RealmReborn": {
    "message": "A Realm Reborn",
    "description": "Expansion.get_RealmReborn"
  },
  "Expansion_Heavensward": {
    "message": "Heavensward",
    "description": "Expansion.get_Heavensward"
  },
  "Expansion_Stormblood": {
    "message": "Stormblood",
    "description": "Expansion.get_Stormblood"
  },
  "Expansion_Shadowbringers": {
    "message": "Shadowbringers",
    "description": "Expansion.get_Shadowbringers"
  },
  "Expansion_Endwalker": {
    "message": "Endwalker",
    "description": "Expansion.get_Endwalker"
  },
  "Help_Timers": {
    "message": "\n/dd timers - Shows timer configuration window\n/dd help timers - Shows this help message\n/dd timers show - Shows the timers window\n/dd timers hide - Hides the timers window\n/dd timers toggle - Toggle the timers window",
    "description": "Help.get_Timers"
  },
  "Help_Todo": {
    "message": "\n/dd todo - Shows todo configuration window\n/dd help todo - Shows this help message\n/dd todo show - Shows the todo window\n/dd todo hide - Hides the todo window\n/dd todo toggle - Toggle the todo window",
    "description": "Help.get_Todo"
  },
  "Help_Base": {
    "message": "Command Overview\n/dd - Show or Hide Main Window\n/dd help timers - Show timer sub-commands\n/dd help todo - Show todo sub-commands",
    "description": "Help.get_Base"
  },
  "BeastTribe_Label": {
    "message": "Beast Tribe",
    "description": "BeastTribe.get_Label"
  },
  "BeastTribe_AllowancesRemaining": {
    "message": "Allowances Remaining",
    "description": "BeastTribe.get_AllowancesRemaining"
  },
  "CustomDelivery_Label": {
    "message": "Custom Delivery",
    "description": "CustomDelivery.get_Label"
  },
  "CustomDelivery_AllowancesRemaining": {
    "message": "Allowances Remaining",
    "description": "CustomDelivery.get_AllowancesRemaining"
  },
  "DomanEnclave_Label": {
    "message": "Doman Enclave",
    "description": "DomanEnclave.get_Label"
  },
  "DomanEnclave_GilRemaining": {
    "message": "gil Remaining",
    "description": "DomanEnclave.get_GilRemaining"
  },
  "DomanEnclave_UnknownStatus": {
    "message": "Status unknown, visit the Doman Enclave to initialize module",
    "description": "DomanEnclave.get_UnknownStatus"
  },
  "DomanEnclave_UnknownStatusLabel": {
    "message": "Status Unknown",
    "description": "DomanEnclave.get_UnknownStatusLabel"
  },
  "DomanEnclave_BudgetRemaining": {
    "message": "Budget Remaining",
    "description": "DomanEnclave.get_BudgetRemaining"
  },
  "DomanEnclave_CurrentAllowance": {
    "message": "Current Allowance",
    "description": "DomanEnclave.get_CurrentAllowance"
  },
  "DomanEnclave_ClickableLinkLabel": {
    "message": "Clickable Link",
    "description": "DomanEnclave.get_ClickableLinkLabel"
  },
  "DomanEnclave_ClickableLink": {
    "message": "Notifications can be clicked on to teleport to the Doman Enclave",
    "description": "DomanEnclave.get_ClickableLink"
  },
  "DutyRoulette_Label": {
    "message": "Duty Roulette",
    "description": "DutyRoulette.get_Label"
  },
  "DutyRoulette_RouletteSelection": {
    "message": "Select Roulettes to Track",
    "description": "DutyRoulette.get_RouletteSelection"
  },
  "DutyRoulette_ClickableLinkLabel": {
    "message": "Clickable Link",
    "description": "DutyRoulette.get_ClickableLinkLabel"
  },
  "DutyRoulette_ClickableLink": {
    "message": "Notifications can be clicked on to open the Duty Finder",
    "description": "DutyRoulette.get_ClickableLink"
  },
  "DutyRoulette_Remaining": {
    "message": "Roulettes Remaining",
    "description": "DutyRoulette.get_Remaining"
  },
  "DutyRoulette_HideExpertWhenCapped": {
    "message": "Expert Roulette Feature",
    "description": "DutyRoulette.get_HideExpertWhenCapped"
  },
  "DutyRoulette_HideExpertHelp": {
    "message": "Marks the Expert Roulette as overriden when you are at your weekly tomestone cap",
    "description": "DutyRoulette.get_HideExpertHelp"
  },
  "DutyRoulette_ExpertTomestones": {
    "message": "Expert Tomestones",
    "description": "DutyRoulette.get_ExpertTomestones"
  },
  "DutyRoulette_Overlay": {
    "message": "Duty Finder Overlay",
    "description": "DutyRoulette.get_Overlay"
  },
  "DutyRoulette_DutyComplete": {
    "message": "Duty Complete",
    "description": "DutyRoulette.get_DutyComplete"
  },
  "DutyRoulette_DutyIncomplete": {
    "message": "Duty Incomplete",
    "description": "DutyRoulette.get_DutyIncomplete"
  },
  "DutyRoulette_RouletteStatus": {
    "message": "Roulette Status",
    "description": "DutyRoulette.get_RouletteStatus"
  },
  "DutyRoulette_NoRoulettesTracked": {
    "message": "No roulettes have been selected for tracking",
    "description": "DutyRoulette.get_NoRoulettesTracked"
  },
  "DutyRoulette_Override": {
    "message": "Duty Override",
    "description": "DutyRoulette.get_Override"
  },
  "FashionReport_Label": {
    "message": "Fashion Report",
    "description": "FashionReport.get_Label"
  },
  "FashionReport_CompletionCondition": {
    "message": "Completion Condition",
    "description": "FashionReport.get_CompletionCondition"
  },
  "FashionReport_ModeSingle": {
    "message": "Single",
    "description": "FashionReport.get_ModeSingle"
  },
  "FashionReport_Mode80Plus": {
    "message": "80 Plus",
    "description": "FashionReport.get_Mode80Plus"
  },
  "FashionReport_ModeAll": {
    "message": "All",
    "description": "FashionReport.get_ModeAll"
  },
  "FashionReport_ModeSingleHelp": {
    "message": "Only notify if no allowances have been spent this week and Fashion Report is available for turn-in",
    "description": "FashionReport.get_ModeSingleHelp"
  },
  "FashionReport_Mode80PlusHelp": {
    "message": "Notify if any allowances remain this week, the highest score is below 80 and Fashion Report is available for turn-in",
    "description": "FashionReport.get_Mode80PlusHelp"
  },
  "FashionReport_ModeAllHelp": {
    "message": "Notify if any allowances remain this week and fashion report is available for turn-in",
    "description": "FashionReport.get_ModeAllHelp"
  },
  "FashionReport_ClickableLinkLabel": {
    "message": "Clickable Link",
    "description": "FashionReport.get_ClickableLinkLabel"
  },
  "FashionReport_ClickableLink": {
    "message": "Notifications can be clicked on to teleport to the Gold Saucer",
    "description": "FashionReport.get_ClickableLink"
  },
  "FashionReport_AllowancesAvailable": {
    "message": "Allowances Available",
    "description": "FashionReport.get_AllowancesAvailable"
  },
  "FashionReport_HighestScore": {
    "message": "Highest Score",
    "description": "FashionReport.get_HighestScore"
  },
  "FashionReport_ReportOpen": {
    "message": "Report Open",
    "description": "FashionReport.get_ReportOpen"
  },
  "FashionReport_AvailableNow": {
    "message": "Available Now",
    "description": "FashionReport.get_AvailableNow"
  },
  "HuntMarks_LevelOne": {
    "message": "Level One",
    "description": "HuntMarks.get_LevelOne"
  },
  "HuntMarks_LevelTwo": {
    "message": "Level Two",
    "description": "HuntMarks.get_LevelTwo"
  },
  "HuntMarks_LevelThree": {
    "message": "Level Three",
    "description": "HuntMarks.get_LevelThree"
  },
  "HuntMarks_Elite": {
    "message": "Elite",
    "description": "HuntMarks.get_Elite"
  },
  "HuntMarks_DailyLabel": {
    "message": "Hunt Marks (Daily)",
    "description": "HuntMarks.get_DailyLabel"
  },
  "HuntMarks_WeeklyLabel": {
    "message": "Hunt Marks (Weekly)",
    "description": "HuntMarks.get_WeeklyLabel"
  },
  "HuntMarks_TrackedHunts": {
    "message": "Tracked Hunts",
    "description": "HuntMarks.get_TrackedHunts"
  },
  "HuntMarks_Obtained": {
    "message": "Obtained",
    "description": "HuntMarks.get_Obtained"
  },
  "HuntMarks_Unobtained": {
    "message": "Unobtained",
    "description": "HuntMarks.get_Unobtained"
  },
  "HuntMarks_Killed": {
    "message": "Killed",
    "description": "HuntMarks.get_Killed"
  },
  "HuntMarks_HuntsRemaining": {
    "message": "Hunts Remaining",
    "description": "HuntMarks.get_HuntsRemaining"
  },
  "HuntMarks_TrackedHuntsStatus": {
    "message": "Tracked Hunts Status",
    "description": "HuntMarks.get_TrackedHuntsStatus"
  },
  "HuntMarks_NoHuntsTracked": {
    "message": "No hunts have been selected for tracking",
    "description": "HuntMarks.get_NoHuntsTracked"
  },
  "JumboCactpot_Label": {
    "message": "Jumbo Cactpot",
    "description": "JumboCactpot.get_Label"
  },
  "JumboCactpot_Tickets": {
    "message": "Tickets",
    "description": "JumboCactpot.get_Tickets"
  },
  "JumboCactpot_NextDrawing": {
    "message": "Next Drawing",
    "description": "JumboCactpot.get_NextDrawing"
  },
  "JumboCactpot_ClickableLink": {
    "message": "Notifications can be clicked on to teleport to the Gold Saucer",
    "description": "JumboCactpot.get_ClickableLink"
  },
  "JumboCactpot_ClickableLinkLabel": {
    "message": "Clickable Link",
    "description": "JumboCactpot.get_ClickableLinkLabel"
  },
  "JumboCactpot_TicketsAvailable": {
    "message": "Tickets Available",
    "description": "JumboCactpot.get_TicketsAvailable"
  },
  "JumboCactpot_NoTickets": {
    "message": "No Tickets",
    "description": "JumboCactpot.get_NoTickets"
  },
  "Levequest_Label": {
    "message": "Levequest",
    "description": "Levequest.get_Label"
  },
  "Levequest_Accepted": {
    "message": "Accepted",
    "description": "Levequest.get_Accepted"
  },
  "Levequest_NextAllowance": {
    "message": "Next Allowance",
    "description": "Levequest.get_NextAllowance"
  },
  "Levequest_AllowancesRemaining": {
    "message": "Allowances Remaining",
    "description": "Levequest.get_AllowancesRemaining"
  },
  "MiniCactpot_Label": {
    "message": "Mini Cactpot",
    "description": "MiniCactpot.get_Label"
  },
  "MiniCactpot_ClickableLink": {
    "message": "Notifications can be clicked on to teleport to the Gold Saucer",
    "description": "MiniCactpot.get_ClickableLink"
  },
  "MiniCactpot_ClickableLinkLabel": {
    "message": "Clickable Link",
    "description": "MiniCactpot.get_ClickableLinkLabel"
  },
  "MiniCactpot_TicketsRemaining": {
    "message": "Tickets Remaining",
    "description": "MiniCactpot.get_TicketsRemaining"
  },
  "TreasureMap_Label": {
    "message": "Treasure Map",
    "description": "TreasureMap.get_Label"
  },
  "TreasureMap_MapAvailable": {
    "message": "Map Available",
    "description": "TreasureMap.get_MapAvailable"
  },
  "TreasureMap_NextMap": {
    "message": "Next Map",
    "description": "TreasureMap.get_NextMap"
  },
  "WondrousTails_Label": {
    "message": "Wondrous Tails",
    "description": "WondrousTails.get_Label"
  },
  "WondrousTails_UnavailableMessage": {
    "message": "This instance is available for a stamp if you re-roll it",
    "description": "WondrousTails.get_UnavailableMessage"
  },
  "WondrousTails_UnavailableRerollMessage": {
    "message": "You have {0} Re-Rolls Available",
    "description": "WondrousTails.get_UnavailableRerollMessage"
  },
  "WondrousTails_AvailableMessage": {
    "message": "A stamp is already available for this instance",
    "description": "WondrousTails.get_AvailableMessage"
  },
  "WondrousTails_CompletableMessage": {
    "message": "Completing this instance will reward you with a stamp",
    "description": "WondrousTails.get_CompletableMessage"
  },
  "WondrousTails_ClaimableMessage": {
    "message": "You can claim a stamp for the last instance",
    "description": "WondrousTails.get_ClaimableMessage"
  },
  "WondrousTails_BookAvailable": {
    "message": "Book Available",
    "description": "WondrousTails.get_BookAvailable"
  },
  "WondrousTails_DutyNotifications": {
    "message": "Duty Start/End Notifications",
    "description": "WondrousTails.get_DutyNotifications"
  },
  "WondrousTails_UnclaimedBookNotifications": {
    "message": "Unclaimed Book Warning",
    "description": "WondrousTails.get_UnclaimedBookNotifications"
  },
  "WondrousTails_Stamps": {
    "message": "Stamps",
    "description": "WondrousTails.get_Stamps"
  },
  "Todo_Label": {
    "message": "Todo",
    "description": "Todo.get_Label"
  },
  "Todo_MainOptions": {
    "message": "Main Options",
    "description": "Todo.get_MainOptions"
  },
  "Todo_TaskSelection": {
    "message": "Task Selection",
    "description": "Todo.get_TaskSelection"
  },
  "Todo_ShowDailyTasks": {
    "message": "Show Daily Tasks",
    "description": "Todo.get_ShowDailyTasks"
  },
  "Todo_ShowWeeklyTasks": {
    "message": "Show Weekly Tasks",
    "description": "Todo.get_ShowWeeklyTasks"
  },
  "Todo_TaskDisplay": {
    "message": "Task Display Options",
    "description": "Todo.get_TaskDisplay"
  },
  "Todo_HideCompletedTasks": {
    "message": "Hide Completed Tasks",
    "description": "Todo.get_HideCompletedTasks"
  },
  "Todo_HideUnavailable": {
    "message": "Hide Unavailable Tasks",
    "description": "Todo.get_HideUnavailable"
  },
  "Todo_WindowOptions": {
    "message": "Window Options",
    "description": "Todo.get_WindowOptions"
  },
  "Todo_HideWindowCompleted": {
    "message": "Hide Window When Complete",
    "description": "Todo.get_HideWindowCompleted"
  },
  "Todo_HideWindowInDuty": {
    "message": "Hide Window In Duty",
    "description": "Todo.get_HideWindowInDuty"
  },
  "Todo_LockWindow": {
    "message": "Lock Window Position",
    "description": "Todo.get_LockWindow"
  },
  "Todo_AutoResize": {
    "message": "Auto Resize",
    "description": "Todo.get_AutoResize"
  },
  "Todo_AnchorCorner": {
    "message": "Anchor Corner",
    "description": "Todo.get_AnchorCorner"
  },
  "Todo_Opacity": {
    "message": "Opacity",
    "description": "Todo.get_Opacity"
  },
  "Todo_DailyTasks": {
    "message": "Daily Tasks",
    "description": "Todo.get_DailyTasks"
  },
  "Todo_WeeklyTasks": {
    "message": "Weekly Tasks",
    "description": "Todo.get_WeeklyTasks"
  },
  "Todo_NoDailyTasksEnabled": {
    "message": "Enable a module in Configuration to track Tasks",
    "description": "Todo.get_NoTasksEnabled"
  },
  "Todo_UseLongLabel": {
    "message": "Use Long Label",
    "description": "Todo.get_UseLongLabel"
  },
  "Timers_MainOptions": {
    "message": "Main Options",
    "description": "Timers.get_MainOptions"
  },
  "Timers_WindowOptions": {
    "message": "Window Options",
    "description": "Timers.get_WindowOptions"
  },
  "Timers_HideWindowInDuty": {
    "message": "Hide Window In Duty",
    "description": "Timers.get_HideWindowInDuty"
  },
  "Timers_LockWindow": {
    "message": "Lock Window Position",
    "description": "Timers.get_LockWindow"
  },
  "Timers_Opacity": {
    "message": "Opacity",
    "description": "Timers.get_Opacity"
  },
  "Timers_NoneEnabledWarning": {
    "message": "Enable which timers you would like to see here with '/dd timers' command",
    "description": "Timers.get_NoTimersEnabledWarning"
  },
  "Timers_Label": {
    "message": "Timers",
    "description": "Timers.get_Label"
  },
  "Timers_EditTimer": {
    "message": "Edit Style",
    "description": "Timers.get_EditTimer"
  },
  "Timers_EditTimerTitle": {
    "message": "Edit Timer Style",
    "description": "Timers.get_EditTimerTitle"
  },
  "Timers_AutoResize": {
    "message": "Auto Resize",
    "description": "Timers.get_AutoResize"
  },
  "Timers_TimeDisplay": {
    "message": "Time Display Options",
    "description": "Timers.get_TimeDisplay"
  },
  "Timers_ColorOptions": {
    "message": "Color Options",
    "description": "Timers.get_ColorOptions"
  },
  "Timers_BackgroundColor": {
    "message": "Background",
    "description": "Timers.get_Background"
  },
  "Timers_ForegroundColor": {
    "message": "Foreground",
    "description": "Timers.get_Foreground"
  },
  "Timers_TextColor": {
    "message": "Text",
    "description": "Timers.get_Text"
  },
  "Timers_TimeColor": {
    "message": "Time",
    "description": "Timers.get_Time"
  },
  "Timers_SizeOptions": {
    "message": "Size Options",
    "description": "Timers.get_SizeOptions"
  },
  "Timers_StretchToFit": {
    "message": "Stretch to Fit",
    "description": "Timers.get_StretchToFit"
  },
  "Timers_Size": {
    "message": "Size",
    "description": "Timers.get_Size"
  },
  "Timers_AvailableNow": {
    "message": "Available Now",
    "description": "Timers.get_AvailableNow"
  },
  "Timers_Name": {
    "message": "Display Name",
    "description": "Timers.get_Name"
  },
  "Timers_EnableCustomName": {
    "message": "Enable Custom Name",
    "description": "Timers.get_EnableCustomName"
  },
  "Teleport_Label": {
    "message": "Teleport",
    "description": "Teleport.get_Label"
  },
  "Teleport_Error": {
    "message": "Cannot teleport in this situation",
    "description": "Teleport.get_Error"
  },
  "Teleport_Teleporting": {
    "message": "Teleporting to '{0}'",
    "description": "Teleport.get_Teleporting"
  },
  "Teleport_CommunicationError": {
    "message": "To use the teleport function, you must install the \"Teleporter\" plugin",
    "description": "Teleport.get_CommunicationError"
  },
  "Teleport_NotUnlocked": {
    "message": "Destination Aetheryte is not unlocked, teleport cancelled",
    "description": "Teleport.get_NotUnlocked"
  }
}